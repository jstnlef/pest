// pest. The Elegant Parser
// Copyright (c) 2018 Drago»ô Tiselice
//
// Licensed under the Apache License, Version 2.0
// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT
// license <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. All files in the project carrying such notice may not be copied,
// modified, or distributed except according to those terms.

// HTTP 1.1 spec as defined https://tools.ietf.org/html/rfc2616. This only implements a very small (mostly inaccurate)
// subset of the request message spec.

http             = { SOI ~ request ~ EOI }

request          = { request_line ~ (header ~ CRLF)* ~ CRLF ~ message_body? }
request_line     = ${ method ~ SP ~ request_uri ~ SP ~ http_version ~ CRLF }

method           = @{ "GET" | "OPTIONS" | "HEAD" | "POST" | "PUT" | "DELETE" | "TRACE" | "CONNECT" | token }

request_uri      = @{ (!SP ~ ASCII)+ }
header           = { token ~ ":" ~ (!CRLF ~ ASCII)* }
http_version     = @{ "HTTP/" ~ DIGIT+ ~ "." ~ DIGIT+ }
message_body     = { ANY* }

// Basic rules
token            = @{ (!non_tokens ~ ASCII)+ }

non_tokens       = _{ "(" | ")" | "<" | ">" | "@" | "," | ";" | ":" | "\\" | "\"" | "/" | "[" | "]" |
                      "?" | "=" | "{" | "}" | SP | "\t" | '\x00'..'\x1f' | "\x7f" }

SP               = _{ " " }
CRLF             = _{ "\r\n" }
